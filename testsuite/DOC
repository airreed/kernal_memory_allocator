Resource map algorithm:

Implementation: 
	We use an entry page to store two linked list. One is free block list, which contain all the free block in we could allocate.And a pagelist to keep track of all the pages we get from the pool. Every page we add a next pointer to point to the next page and an int number "number_in_use" to get the number of block allocated in this page. When the number drop to 0, we call the free_page function to return the page to pool.

	In every free blk, we set a pointer(nextFree) and an int(size) to keep track of the next free block and store the size infomation of current block.Every time we get a malloc request, the program will go through the free block list to find the first block to fit in. Once it got one, return the address of this block. And when comes an free command, we use the pointer and size given by the request to free the block and add the block to the free list.
 
	Result:
		3.trace:0.26s		Page Usage:842
		5.trace:4.47s		Page Usage:7305


Simple Buddy system:
	In a simple buddy system, we define an array with 8 entry which is the 8 different free block sizes. Every entry has an pointer to the first free block, which is also a linked list which contain the all the same size free blocks. Every time we got requested, fist we round the size to the nearest power of 2. And we go to the entry to see if there is any available blocks in the list. If not ,we divide the block in the next entry into 2 same size block and add them to the free list. Every time after free, we examine if there any empty buddy in the list. If yes, we coalesce them and add them to the next entry.

	Result:
		3.trace:0.15s		Page Usage:1629
		5.trace:1.78s		Page Usage:16059

Lazy Buddy:
	We add three parameter in every entry to represent the stutas of the list. And we coalesce them base on the status.

	Result:
		3.trace:0.09s		Page Usage:1617
		5.trace:1.83s		Page Usage:15838
Analysis: 
	From the test result we could see that lzbud and bud run faster than rm, however they use much more space to store the data. This is because resouce map algorithm could make better use of the space and has less fragmentation, while bud and lazy bud has much more fragmentation situation. But bud and lzbud could run faster than rm because it doesn't need to go through the the whole linked list to find a block. They only need to find a block from the fight entry. 
